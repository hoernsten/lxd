#!/bin/bash

# Perform a crude check to make sure the script is not running on a host device
if [ -d /snap/lxd ]; then
    echo "Error: Only run this script on guest containers"
    exit
fi

# Get the current hostname
alias="$(cat /etc/hostname)"

# Prompt the user for various input
read -p "Enter hostname [default=$alias]: " hostname
read -p "Enter IP address: " ipaddr
read -p "Enter prefix (CIDR): " prefix
read -p "Enter gateway address: " gateway
read -p "Enter primary DNS IP: " dns1
read -p "Enter secondary DNS IP: " dns2
read -p "Enter primary network interface [default=eth0]: " iface
read -p "Enter remote syslog server [default=none]: " syslog

# Revert to default values if no input is provided
if [ -z $hostname ]; then
    hostname=$alias
fi

if [ -z $iface ]; then
    iface=eth0
fi

# Add the rsyslog configuration if a server is specified
if [ ! -z $syslog ]; then
    printf "\n*.* @@$syslog:514" >> /etc/rsyslog.conf
fi

# Define iptables ruleset for systems not running ufw
function iptables-rules {
iptables --flush
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -i $iface -p icmp --icmp-type 8 -j ACCEPT
iptables -P INPUT DROP
}

# Perform various network and system configurations if the guest operating system is CentOS 7
if grep -oq 'CentOS Linux 7' /etc/os-release; then
    echo "Updating system"
    yum update -y &> /dev/null
    echo "Installing packages"
    yum install nano net-tools wget htop net-tools epel-release iptables-services yum-utils yum-cron -y &> /dev/null
    echo "Setting up shop"
    echo "PermitRootLogin no" >> /etc/ssh/sshd_config
    sed -i 's/BOOTPROTO=dhcp/BOOTPROTO=static/g' /etc/sysconfig/network-scripts/ifcfg-$iface
    echo "IPADDR=$ipaddr" >> /etc/sysconfig/network-scripts/ifcfg-$iface
    echo "PREFIX=$prefix" >> /etc/sysconfig/network-scripts/ifcfg-$iface
    echo "GATEWAY=$gateway" >> /etc/sysconfig/network-scripts/ifcfg-$iface
    echo "DNS1=$dns1" >> /etc/sysconfig/network-scripts/ifcfg-$iface
    echo "DNS2=$dns2" >> /etc/sysconfig/network-scripts/ifcfg-$iface
    sed -i "s/$alias/$hostname/g" /etc/hostname
    sed -i "s/$alias/$hostname/g" /etc/hosts
    sed -i "s/update_cmd = default/update_cmd = security/g" /etc/yum/yum-cron.conf
    sed -i "s/apply_updates = no/apply updates = yes/g" /etc/yum/yum-cron.conf
    systemctl mask firewalld &> /dev/null
    systemctl stop firewalld
    systemctl enable iptables &> /dev/null
    systemctl start iptables
    systemctl start yum-cron
    systemctl enable yum-cron &> /dev/null
    iptables-rules
    iptables-save > /etc/sysconfig/iptables

# Perform various network and system configurations if the guest operating system is Ubuntu 16.04
elif grep -oq 'Ubuntu 16.04' /etc/os-release; then
    echo "Updating system"
    apt-get update &> /dev/null
    echo "Setting up shop"
    echo "APT::Periodic::Download-Upgradeable-Packages \"1\";" >> /etc/apt/apt.conf.d/20auto-upgrades
    echo "APT::Periodic::AutocleanInterval \"1\";" >> /etc/apt/apt.conf.d/20auto-upgrades
    sed -i "s/$alias/$hostname/g" /etc/hostname
    echo -e "127.0.0.1 localhost\n127.0.1.1 $hostname" > /etc/hosts
    sed -i "s/dhcp/static/g" /etc/network/interfaces.d/50-cloud-init.cfg
    echo "    address $ipaddr/$prefix" >> /etc/network/interfaces.d/50-cloud-init.cfg
    echo "    gateway $gateway" >> /etc/network/interfaces.d/50-cloud-init.cfg
    echo "    dns-nameservers $dns1 $dns2" >> /etc/network/interfaces.d/50-cloud-init.cfg
    sed -i 's/IPV6=yes/IPV6=no/g' /etc/default/ufw
    ufw enable &> /dev/null

# Perform various network and system configurations if the guest operating system is Ubuntu 18.04
elif grep -oq 'Ubuntu 18.04' /etc/os-release; then
    echo "Updating system"
    apt-get update &> /dev/null
    echo "Setting up shop"
    echo "APT::Periodic::Download-Upgradeable-Packages \"1\";" >> /etc/apt/apt.conf.d/20auto-upgrades
    echo "APT::Periodic::AutocleanInterval \"1\";" >> /etc/apt/apt.conf.d/20auto-upgrades
    sed -i "s/$alias/$hostname/g" /etc/hostname
    echo -e "127.0.0.1 localhost\n127.0.1.1 $hostname" > /etc/hosts
    sed -i "s/dhcp4: true/dhcp4: false/g" /etc/netplan/50-cloud-init.yaml
    echo "            addresses: [$ipaddr/$prefix]" >> /etc/netplan/50-cloud-init.yaml
    echo "            gateway4: $gateway" >> /etc/netplan/50-cloud-init.yaml
    echo "            nameservers:" >> /etc/netplan/50-cloud-init.yaml
    echo "                addresses: [$dns1,$dns2]" >> /etc/netplan/50-cloud-init.yaml
    netplan apply
    sed -i 's/IPV6=yes/IPV6=no/g' /etc/default/ufw
    ufw enable &> /dev/null
fi
